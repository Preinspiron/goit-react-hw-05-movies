{"version":3,"file":"static/js/884.a1899c1d.chunk.js","mappings":"sMAkEA,UA9DgB,WAAO,IAAD,IACpB,GAA8BA,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACrCC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OATAE,QAAQC,IAAIR,GAEZO,QAAQC,IAAIN,IAEZO,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUL,GAASM,KAAKZ,GAAYa,MAAML,QAAQC,IAEnD,GAAE,CAACH,KAGF,iCACE,SAAC,KAAD,CAAMQ,UAAU,WAAWC,GAAIZ,EAA/B,kBAGEJ,GAGA,4BACE,iBAAKe,UAAU,UAAf,WACE,gBACEA,UAAU,SACVE,IAAG,0CAAqCjB,EAAQkB,aAChDC,IAAKnB,EAAQoB,SAEf,iBAAKL,UAAU,qBAAf,WACE,wBAAKf,EAAQoB,SACb,uBAAIpB,EAAQqB,SACZ,sCAAcC,KAAKC,MAA6B,GAAvBvB,EAAQwB,cAAjC,QACA,sCACA,uBAAIxB,EAAQyB,YACZ,oCACA,wBACGzB,EAAQ0B,OAAOC,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OAClB,wBAAiBA,GAARD,EADS,aAM1B,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMZ,GAAG,QAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAc,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,YAlCN,kBAyCP,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { useEffect, Suspense, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { axiosById } from '../api/axios';\n\nconst Details = () => {\n  const [fetched, setFetched] = useState();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  const { movieId } = useParams();\n  console.log(location);\n\n  console.log(backLinkHref);\n\n  useEffect(() => {\n    axiosById(movieId).then(setFetched).catch(console.log);\n    // console.log(ganres);\n  }, [movieId]);\n\n  return (\n    <>\n      <Link className=\"back-btn\" to={backLinkHref}>\n        Back\n      </Link>\n      {!fetched ? (\n        'Loading...111'\n      ) : (\n        <div>\n          <div className=\"details\">\n            <img\n              className=\"poster\"\n              src={`https://image.tmdb.org/t/p/w300/${fetched.poster_path}`}\n              alt={fetched.title}\n            />\n            <div className=\"details-movie-info\">\n              <h2>{fetched.title}</h2>\n              <p>{fetched.score}</p>\n              <span>Score: {Math.round(fetched.vote_average * 10)}%</span>\n              <h2>Overview</h2>\n              <p>{fetched.overview}</p>\n              <h2>Genres</h2>\n              <ul>\n                {fetched.genres.map(({ name }, index) => (\n                  <li key={index}>{name}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <div>\n            <h2>Additional Information</h2>\n            <ul>\n              <li>\n                <Link to=\"coast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\nexport default Details;\n"],"names":["useState","fetched","setFetched","location","useLocation","backLinkHref","state","from","movieId","useParams","console","log","useEffect","axiosById","then","catch","className","to","src","poster_path","alt","title","score","Math","round","vote_average","overview","genres","map","index","name","Suspense","fallback"],"sourceRoot":""}